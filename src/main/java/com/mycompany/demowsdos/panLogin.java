/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.demowsdos;

import com.company.wsdl.BasicHttpBinding_IServiceStub;
import com.company.wsdl.Loginresponse;
import com.company.wsdl.Logoutresponse;
import com.company.wsdl.ServiceLocator;
import java.net.MalformedURLException;
import java.net.URL;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.rpc.ServiceException;

/**
 *
 * @author EduardoZetina
 */
public class panLogin extends javax.swing.JPanel {
    private static final int LOGIN = 1;
    private static final int LOGOUT = 2;
   

    /**
     * Creates new form panLogin
     */
    public panLogin() {
        initComponents();
        this.txtResp.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUser = new javax.swing.JTextField();
        txtApiKey = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pwdPass = new javax.swing.JPasswordField();
        btnLogIn = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResp = new javax.swing.JTextArea();

        txtUser.setToolTipText("Enter your User Name");

        jLabel1.setText("User name:");

        jLabel2.setText("Password:");

        jLabel3.setText("New Api Key:");

        pwdPass.setToolTipText("Enter you Password");

        btnLogIn.setText("Login");
        btnLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInActionPerformed(evt);
            }
        });

        btnLogOut.setText("Logout");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        txtResp.setColumns(20);
        txtResp.setRows(5);
        jScrollPane1.setViewportView(txtResp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLogIn)
                        .addGap(40, 40, 40)
                        .addComponent(btnLogOut))
                    .addComponent(txtApiKey)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtUser, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pwdPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pwdPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApiKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogIn)
                    .addComponent(btnLogOut))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInActionPerformed
        if((this.txtUser.getText().isEmpty())  || (this.pwdPass.getPassword().length==0)){
            JOptionPane.showMessageDialog(this, "Please, enter your User Name and Password", "Missing values", JOptionPane.ERROR_MESSAGE);
        }else{
            int intIntRes = JOptionPane.showConfirmDialog(this, "You will loose your current Api Key, and must use the new generated. Do you want continue?" ,"¡¡¡WARNING!!!",JOptionPane.OK_CANCEL_OPTION);
            if(intIntRes==JOptionPane.OK_OPTION)
                connectToService(LOGIN);
            }
        
    }//GEN-LAST:event_btnLogInActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        if(this.txtApiKey.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please, enter your Api Key.", "Missing values", JOptionPane.ERROR_MESSAGE);
        }else{
            int intIntRes = JOptionPane.showConfirmDialog(this, "You will loose your current Api Key, you'll have generate a new one to access the services. Do you want continue?" , "¡¡¡WARNING!!!", JOptionPane.OK_CANCEL_OPTION);
            if(intIntRes==JOptionPane.OK_OPTION)
                connectToService(LOGOUT);
            }
    }//GEN-LAST:event_btnLogOutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogIn;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField pwdPass;
    private javax.swing.JTextField txtApiKey;
    private javax.swing.JTextArea txtResp;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private void connectToService(int intServ) {
        try {
            try {
                URL url = new URL("https://opticat1.net/OBWS/Service.svc");
                ServiceLocator sl = new ServiceLocator();
                sl.getBasicHttpBinding_IService(url);
                BasicHttpBinding_IServiceStub stub = (BasicHttpBinding_IServiceStub) sl.getBasicHttpBinding_IService(url);

                   switch (intServ)
                   {
                       case 1:
                           //create a new Api Key
                            Loginresponse response;
                            char passArray[] = this.pwdPass.getPassword();
                            String StrPass = new String(passArray);
                           
                            try {

                                response = stub.login(this.txtUser.getText(), StrPass);
                                String status = response.getStatus() + ", " + response.getErrormessage();
                                this.txtResp.setText(this.txtResp.getText() + "Status: " + status + "\n");
                                this.txtApiKey.setText(response.getApikey());
                                int intRes = status.indexOf("Error");
                                if (intRes < 0)
                                    this.txtResp.setText(this.txtResp.getText() + "Please, copy your new Api Key, now you can access the services with it, no need to generate another\n" );
                                //JOptionPane.showMessageDialog(this, "Status: " + status);
                            }
                            catch (RemoteException ex) {
                                Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
                                this.txtResp.setText(this.txtResp.getText() + "Service error: " + ex.getMessage() + "\n" );
                            }

                            break;
                       case 2:

                            Logoutresponse responseLO;
                            try {
                               responseLO = stub.logout(txtApiKey.getText());

                               String status = responseLO.getStatus() + ", " + responseLO.getErrormessage();
                               this.txtResp.setText(this.txtResp.getText() + "Status: " + status + "\n");
                               int intRes = status.indexOf("Error");
                               if (intRes < 0)
                                   this.txtResp.setText(this.txtResp.getText() + "Api Key disabled, to access the services you will have to generate another one.\n" );
                            }
                            catch (RemoteException ex) {
                                Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
                                this.txtResp.setText(this.txtResp.getText() + "Service error: " + ex.getMessage() + "\n");
                            }
                           break;
                       default:
                            this.txtResp.setText(this.txtResp.getText() + "Processing ...\n" );
                            break;
                   }            
                }catch (MalformedURLException ex) {
                    Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
                    this.txtResp.setText(this.txtResp.getText() + "Service error: " + ex.getMessage() +"\n");
                }
            }catch (ServiceException  ex){
                this.txtResp.setText(this.txtResp.getText() + "Service error: " + ex.getMessage() + "\n");
         }
    }
}
